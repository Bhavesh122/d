import axios from 'axios';

const API_BASE_URL = 'http://localhost:8080/api/users';
const AUTH_API_BASE_URL = 'http://localhost:8080/api/auth';

const userService = {
  getByEmail: async (email) => {
    const res = await axios.get(`${API_BASE_URL}/${encodeURIComponent(email)}`);
    return res.data;
  },
  
  // Get total users count by fetching all users and counting them
  getTotalUsersCount: async () => {
    try {
      console.log('Trying to fetch users for count...');
      
      // Try auth/users first (most likely since you have auth/signup)
      try {
        console.log('Trying /api/auth/users...');
        const res = await axios.get(`${AUTH_API_BASE_URL}/users`);
        console.log('Auth users response:', res.data);
        
        if (Array.isArray(res.data)) {
          console.log('Found', res.data.length, 'users in auth/users');
          return res.data.length;
        }
        
        // If response has users property
        if (res.data.users && Array.isArray(res.data.users)) {
          console.log('Found', res.data.users.length, 'users in auth/users.users');
          return res.data.users.length;
        }
        
        console.log('Auth users response is not an array, trying next endpoint...');
      } catch (e1) {
        console.log('Auth users failed:', e1.message);
      }
      
      // Try regular users endpoint
      try {
        console.log('Trying /api/users...');
        const res = await axios.get(`${API_BASE_URL}`);
        console.log('Users response:', res.data);
        
        if (Array.isArray(res.data)) {
          console.log('Found', res.data.length, 'users in /api/users');
          return res.data.length;
        }
        
        // If response has users property
        if (res.data.users && Array.isArray(res.data.users)) {
          console.log('Found', res.data.users.length, 'users in users.users');
          return res.data.users.length;
        }
        
        console.log('Users response is not an array');
      } catch (e2) {
        console.log('Users endpoint failed:', e2.message);
      }
      
      console.log('All endpoints failed, returning 0');
      return 0;
    } catch (error) {
      console.error('Error fetching total users count:', error);
      return 0;
    }
  }
};

export default userService;
